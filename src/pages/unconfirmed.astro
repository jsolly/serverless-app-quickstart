---
import Layout from "../layouts/Layout.astro";

const search = Astro.url.searchParams;
const email = search.get("email");
const success = search.get("success");
const error = search.get("error");

let message = "";
let messageType: "success" | "error" | null = null;

if (success === "true") {
	message = "Verification email sent! Check your inbox.";
	messageType = "success";
} else if (error) {
	messageType = "error";
	switch (error) {
		case "email_required":
			message = "No email address found";
			break;
		case "failed":
			message = "Failed to send email. Please try again.";
			break;
		default:
			message = "An unexpected error occurred. Please try again.";
	}
}
---

<Layout title="Verify Your Email" description="Please verify your email address to continue">
  <div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div class="text-center">
        <div class="mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-blue-100">
          <svg class="h-6 w-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Check Your Email
        </h2>
        <p class="mt-2 text-center text-sm text-gray-600">
          We've sent a verification link to
        </p>
        <p class="mt-1 text-center text-sm font-medium text-gray-900">
          {email || "your email address"}
        </p>
      </div>

      <div class="mt-8 space-y-6">
        <div class="rounded-md bg-blue-50 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-blue-800">
                What's next?
              </h3>
              <div class="mt-2 text-sm text-blue-700">
                <ul class="list-disc pl-5 space-y-1">
                  <li>Check your email inbox (and spam folder)</li>
                  <li>Click the verification link in the email</li>
                  <li>Return here to sign in</li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        {message && (
          <div class={`p-4 rounded-md ${messageType === "success" ? "bg-green-50 text-green-700" : "bg-red-50 text-red-700"}`}>
            {message}
          </div>
        )}

        <div class="space-y-4">
          <form id="resend-form" action="/api/auth/resend-verification" method="post">
            <input type="hidden" name="email" value={email || ""} />
            <button
              id="resend-btn"
              type="submit"
              class="group relative w-full flex justify-center py-2 px-4 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed"
            >
              Resend verification email
            </button>
          </form>
          
          <div class="text-center">
            <a
              href="/"
              class="font-medium text-blue-600 hover:text-blue-500"
            >
              Back to home
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const resendBtn = document.getElementById('resend-btn') as HTMLButtonElement;
  const resendForm = document.getElementById('resend-form') as HTMLFormElement;
  const email = new URLSearchParams(window.location.search).get('email');
  let cooldownTimer: ReturnType<typeof setInterval> | null = null;

  const COOLDOWN_KEY = 'resend-verification-cooldown';
  const COOLDOWN_DURATION = 30;

  function initializeCooldown() {
    const lastSentStr = localStorage.getItem(COOLDOWN_KEY);
    
    if (!lastSentStr) {
      setButtonCooldown(COOLDOWN_DURATION);
      return;
    }

    const lastSent = Number.parseInt(lastSentStr, 10);
    const elapsed = Math.floor((Date.now() - lastSent) / 1000);
    const remaining = COOLDOWN_DURATION - elapsed;

    if (remaining > 0) {
      setButtonCooldown(remaining);
    }
  }

  resendForm?.addEventListener('submit', () => {
    localStorage.setItem(COOLDOWN_KEY, Date.now().toString());
  });

  function setButtonCooldown(seconds: number) {
    if (cooldownTimer) {
      clearInterval(cooldownTimer);
    }

    resendBtn.disabled = true;
    let remaining = seconds;

    const updateButton = () => {
      if (remaining > 0) {
        resendBtn.textContent = `Resend verification email (${remaining}s)`;
        remaining--;
      } else {
        resendBtn.disabled = false;
        resendBtn.textContent = 'Resend verification email';
        if (cooldownTimer) {
          clearInterval(cooldownTimer);
          cooldownTimer = null;
        }
      }
    };

    updateButton();
    cooldownTimer = setInterval(updateButton, 1000);
  }

  initializeCooldown();
</script>
